name: Framework Release Integration Tests

on: 
  workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    env:
      OPENAI_API_KEY: ${{ secrets.INTEG_OPENAI_API_KEY }}
      SHOTGRID_API_KEY: ${{ secrets.INTEG_SHOTGRID_API_KEY }}
      SHOTGRID_URL: ${{ secrets.INTEG_SHOTGRID_URL }}
      SHOTGRID_USER: ${{ secrets.INTEG_SHOTGRID_USER }}
      SHOTGRID_PASSWORD: ${{ secrets.INTEG_SHOTGRID_PASSWORD }}
      LEONARDO_API_KEY: ${{ secrets.INTEG_LEONARDO_API_KEY }}
      AWS_REGION_NAME: ${{ secrets.INTEG_AWS_REGION_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.INTEG_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.INTEG_AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout actions
        uses: actions/checkout@v3

      - name: Set up WSL
        run: |
          sudo add-apt-repository ppa:wslutilities/wslu
          sudo apt update
          sudo apt install wslu

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make install
        shell: bash

      - name: Activate venv 
        run: |
          source $VENV
          echo PATH=$PATH >> $GITHUB_ENV
        shell: bash

      - name: Run tests
        run: make test

      - name: Run code checks
        run: make check
